#Plot all  groups
sumrepdat <- summarySE(rep_data, measurevar = 'score', groupvars=c('group', 'time'))
head(sumrepdat)
p11 <- ggplot(rep_data, aes(x = time, y = score, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = 1.5, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = 'black')+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean - sem, ymax = score_mean + sem), width = .05)+
scale_colour_brewer(palette = 'Dark2')+
scale_fill_brewer(palette = 'Dark2')+
ylim(0,100)+
ggtitle('pre-/post-intervention bonding')
ggsave('3Conditions.png', width = w, height = h)
p11
#This code was used to perform the analyses reported in:
#Savage, P. E., Ampiah-Bonney, A., Arabadjiev, A., Arhine, A., Ariza, J. F., Arnese, F., Bamford, J. S., Barbosa, B. S., Beck, A.-K., Belyk, M., Benetos, E., Bulbulia, J. A., Cabildo, A., Calhoun, S., Chiba, G., Dabaghi Varnosfaderani, S., Dias, R., Duran, S. I., Echim, S., Færøvik, U., Fitch, W. T., Fujii, S., Gabriel, S., Grassi, M., Guiotto Nai Fovino, L. Haiduk, F., Hajič jr., J., Hansen, N. C., Han, K. Y., He, Y., Hegde, S., Honbolygó, F., Huang, J., Jacoby, N., Jadoul, Y., Jia, Z., Jung, T., Kertész, C., Khasanah, U., Kim, I., Kitayama, Y., Kosachenko, A., Krzyżanowski, W., Kuikuro, U., Kurdova, D., Larrouy-Maestri, P., Mikova, Z., Leongómez, J. D., Liu, F., Lomsadze, T., Loui, P., Ma, Y., McBride, J. M., Mousavi, N., Moya, D., Natsitsabui, R., Nguqu, N., Novembre, G., Nuska, P., Nweke, F. E., Ong, J. H., Opondo, P., Ozaki, Y., Parkinson, H., Parselelo, M. L., Pavlov, Y.G., Pavlovich, D., Perry, G., Pfordresher, P. Q., Pisanski, K., Podlipniak, P., Popescu, T., Proutskova, P., Purdy, S., Ravignani, A., Raviv, L., Reindl, E., Ross, R. M., Sadaphal, D. P., Shakya, S. R., Shi, Z., Shilton, D., Silva-Zurita, J., Soto-Silva, I., Štěpánková, B., Talamini, F., Tarr, B., Thompson, W. F., Tierney, A., Tiratanti, P., Trainor, L., Tunçgenç,  B., Vanden Bosch der Nederlanden, C., Vaida, S. Varella, M. A. C., Youngblood, M., Zariquiey, R. (In Principle Accepted). Does synchronised singing enhance social bonding more than speaking does? A global experimental Stage 1 Registered Report. Peer Community In Registered Reports. Preprint: https://doi.org/10.31234/osf.io/pv3m9
#It was partially adapted from code from the following publication:
#Allen, M., Poggiali, D., Whitaker, K., Marshall, T. R., Van Langen, J., & Kievit, R. A. (2021). Raincloud plots: A multi-platform tool for robust data visualization. Wellcome Open Research, 4, 63. https://doi.org/10.12688/wellcomeopenres.15191.2
#Set working directory
setwd('/Users/psav050/Documents/GitHub/sync-coop-song-speech')#NB: You need to set this to your own local working directory to reproduce the analysis
#Install and load packages
if (!require(remotes)) { install.packages('remotes') }
remotes::install_github('jorvlan/raincloudplots')
packages <- c('ggplot2', 'dplyr', 'lavaan', 'plyr', 'cowplot', 'rmarkdown',
'readr', 'caTools', 'bitops', 'xfun','psych','knitr','forcats','GPArotation','tidyr')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(cowplot)
library(dplyr)
library(readr)
library(forcats)
library(psych)
library(tidyr)
knitr::opts_chunk$set(fig.width=6, fig.height=3, fig.path='figs/',
echo=FALSE, warning=FALSE, message=FALSE)
source('R_rainclouds.R')
source('summarySE.R')
source('simulateData.R')
# width and height variables for saved plots
w = 6
h = 3
# Make the figure folder if it doesn't exist yet
dir.create('../figs/tutorial_R/', showWarnings = FALSE)
head(summary_simdat)
#Load and pre-process data (NB: Full raw files with pilot participant data not shared publicly, just shown for transparency - you can reproduce this analysis starting )
df<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/SpeechSong_London_Chinese_March 21, 2025_20.44_unifiedrows.csv') #import from separate Qualtrics account output - not shared publicly
df<-df[-c(12,13),] #Exclude duplicated participant data (change from hard-coding?)
d<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/song_May 7, 2025_21.02.csv')#import from main Qualtrics account output - not shared publicly
d<-d[-c(1:244),] #Exclude pilot data before Stage 2 data collection (change from hard-coding?)
d[18,19]="R" #fix participant entry error
d[1,20]="10" #fix participant entry error
d[14,20]="6" #fix participant entry error
d<-d[-c(21),] #Exclude duplicated participant data (change from hard-coding?)
df<-rbind(df,d)
colnames(df)<-df[1,] #change column names to make clear what they are
#Rename with shorter variable names
names(df)[names(df) == 'What is the "Group ID" listed on the screen?'] <- 'group'
names(df)[names(df) == "What is the \"Participant ID\" number listed on your consent form?"] <- 'ID'
names(df)[names(df) == "How much do you agree with the following statements? - Please rate “strongly agree” to show you are paying attention"] <- 'attention'
df<-df[-c(1:2),] #remove non-data rows
#df<- subset(df, Finished=="True") #Reinstate to remove participants who did not finish - but check capitalisation if using this
df<- subset(df, `Response Type`=="IP Address") #Remove test ("Preview") responses
df$`IP Address`="NA"#Remove IP address data
write.csv(df,'stage2data.csv')
df<-read_csv(file='stage2data.csv')
df <- df[-1] #remove ID row
#df<-read_csv(file='https://raw.githubusercontent.com/comp-music-lab/sync-coop-song-speech/refs/heads/main/stage2data.csv') #read full raw data file of Stage 2 participant data directly from GitHub
df<-df[,c(19,20,22,24,26,28,29,31,33,35,37,40,41,42,44)] #keep only social bonding and key variables for confirmatory analysis
write.csv(df,'keydata.csv')
rep_data<-read_csv(file='keydata.csv')
rep_data<- subset(rep_data, attention>49) #Exclude participants failing attention check
#Rename variables:
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - ‘‘I trust the other participants”...4"] <- 'trust'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - ‘‘I trust the other participants”...10"] <- 'trust'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - \"I feel like I am on the same team with the other participants\"...5"] <- 'team'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - \"I feel like I am on the same team with the other participants\"...11"] <- 'team'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...6'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...12'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I feel strong ties to the other participants”...7'] <- 'ties'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I feel strong ties to the other participants”...13'] <- 'ties'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - \"I have a lot in common with the other participants\"...8'] <- 'common'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - \"I have a lot in common with the other participants\"...15'] <- 'common'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...9'] <- 'close'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...16'] <- 'close'
#combine same variables to measure consistency
bind<-rbind(rep_data[,4:9],rep_data[,c(10:13,15:16)])
#Internal consistency analysis of individual bonding variables (Cronbach's alpha)
psych::alpha(bind)
psych::omega(bind)
#Average individual scores into an overall bonding score
rep_data$Pre_Experiment<-rowMeans(rep_data[,4:9]) #pre-experiment baseline average
rep_data<- subset(rep_data, Pre_Experiment<80) #Exclude participants too well-bonded before experiment
rep_data$Post_Experiment<-rowMeans(rep_data[,c(10:13,15:16)]) #post-experiment average
data_long <- gather(rep_data, time, score, Pre_Experiment:Post_Experiment, factor_key=TRUE)
colnames(data_long)[1] <- 'Participant'
write.csv(data_long,'keydata_long.csv')
rep_data<-read_csv(file='keydata_long.csv',
col_types = cols(group = col_factor(levels = c('S', 'C', 'R')),
time = col_factor(levels = c('Pre_Experiment', 'Post_Experiment'))))
rep_data<-rep_data[,-1]
#Plot all  groups
sumrepdat <- summarySE(rep_data, measurevar = 'score', groupvars=c('group', 'time'))
head(sumrepdat)
p11 <- ggplot(rep_data, aes(x = time, y = score, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = 1.5, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = 'black')+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean - sem, ymax = score_mean + sem), width = .05)+
scale_colour_brewer(palette = 'Dark2')+
scale_fill_brewer(palette = 'Dark2')+
ylim(0,100)+
ggtitle('pre-/post-intervention bonding')
ggsave('3Conditions.png', width = w, height = h)
p11
#This code was used to perform the analyses reported in:
#Savage, P. E., Ampiah-Bonney, A., Arabadjiev, A., Arhine, A., Ariza, J. F., Arnese, F., Bamford, J. S., Barbosa, B. S., Beck, A.-K., Belyk, M., Benetos, E., Bulbulia, J. A., Cabildo, A., Calhoun, S., Chiba, G., Dabaghi Varnosfaderani, S., Dias, R., Duran, S. I., Echim, S., Færøvik, U., Fitch, W. T., Fujii, S., Gabriel, S., Grassi, M., Guiotto Nai Fovino, L. Haiduk, F., Hajič jr., J., Hansen, N. C., Han, K. Y., He, Y., Hegde, S., Honbolygó, F., Huang, J., Jacoby, N., Jadoul, Y., Jia, Z., Jung, T., Kertész, C., Khasanah, U., Kim, I., Kitayama, Y., Kosachenko, A., Krzyżanowski, W., Kuikuro, U., Kurdova, D., Larrouy-Maestri, P., Mikova, Z., Leongómez, J. D., Liu, F., Lomsadze, T., Loui, P., Ma, Y., McBride, J. M., Mousavi, N., Moya, D., Natsitsabui, R., Nguqu, N., Novembre, G., Nuska, P., Nweke, F. E., Ong, J. H., Opondo, P., Ozaki, Y., Parkinson, H., Parselelo, M. L., Pavlov, Y.G., Pavlovich, D., Perry, G., Pfordresher, P. Q., Pisanski, K., Podlipniak, P., Popescu, T., Proutskova, P., Purdy, S., Ravignani, A., Raviv, L., Reindl, E., Ross, R. M., Sadaphal, D. P., Shakya, S. R., Shi, Z., Shilton, D., Silva-Zurita, J., Soto-Silva, I., Štěpánková, B., Talamini, F., Tarr, B., Thompson, W. F., Tierney, A., Tiratanti, P., Trainor, L., Tunçgenç,  B., Vanden Bosch der Nederlanden, C., Vaida, S. Varella, M. A. C., Youngblood, M., Zariquiey, R. (In Principle Accepted). Does synchronised singing enhance social bonding more than speaking does? A global experimental Stage 1 Registered Report. Peer Community In Registered Reports. Preprint: https://doi.org/10.31234/osf.io/pv3m9
#It was partially adapted from code from the following publication:
#Allen, M., Poggiali, D., Whitaker, K., Marshall, T. R., Van Langen, J., & Kievit, R. A. (2021). Raincloud plots: A multi-platform tool for robust data visualization. Wellcome Open Research, 4, 63. https://doi.org/10.12688/wellcomeopenres.15191.2
#Set working directory
setwd('/Users/psav050/Documents/GitHub/sync-coop-song-speech')#NB: You need to set this to your own local working directory to reproduce the analysis
#Install and load packages
if (!require(remotes)) { install.packages('remotes') }
remotes::install_github('jorvlan/raincloudplots')
packages <- c('ggplot2', 'dplyr', 'lavaan', 'plyr', 'cowplot', 'rmarkdown',
'readr', 'caTools', 'bitops', 'xfun','psych','knitr','forcats','GPArotation','tidyr')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(cowplot)
library(dplyr)
library(readr)
library(forcats)
library(psych)
library(tidyr)
knitr::opts_chunk$set(fig.width=6, fig.height=3, fig.path='figs/',
echo=FALSE, warning=FALSE, message=FALSE)
source('R_rainclouds.R')
source('summarySE.R')
source('simulateData.R')
# width and height variables for saved plots
w = 6
h = 3
# Make the figure folder if it doesn't exist yet
dir.create('../figs/tutorial_R/', showWarnings = FALSE)
head(summary_simdat)
#Load and pre-process data (NB: Full raw files with pilot participant data not shared publicly, just shown for transparency - you can reproduce this analysis starting )
df<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/SpeechSong_London_Chinese_March 21, 2025_20.44_unifiedrows.csv') #import from separate Qualtrics account output - not shared publicly
df<-df[-c(12,13),] #Exclude duplicated participant data (change from hard-coding?)
d<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/song_May 7, 2025_21.02.csv')#import from main Qualtrics account output - not shared publicly
d<-d[-c(1:244),] #Exclude pilot data before Stage 2 data collection (change from hard-coding?)
d[18,19]="R" #fix participant entry error
d[1,20]="10" #fix participant entry error
d[14,20]="6" #fix participant entry error
d<-d[-c(21),] #Exclude duplicated participant data (change from hard-coding?)
df<-rbind(df,d)
colnames(df)<-df[1,] #change column names to make clear what they are
#Rename with shorter variable names
names(df)[names(df) == 'What is the "Group ID" listed on the screen?'] <- 'group'
names(df)[names(df) == "What is the \"Participant ID\" number listed on your consent form?"] <- 'ID'
names(df)[names(df) == "How much do you agree with the following statements? - Please rate “strongly agree” to show you are paying attention"] <- 'attention'
df<-df[-c(1:2),] #remove non-data rows
#df<- subset(df, Finished=="True") #Reinstate to remove participants who did not finish - but check capitalisation if using this
df<- subset(df, `Response Type`=="IP Address") #Remove test ("Preview") responses
df$`IP Address`="NA"#Remove IP address data
write.csv(df,'stage2data.csv')
df<-read_csv(file='stage2data.csv')
df <- df[-1] #remove ID row
df<-read_csv(file='https://raw.githubusercontent.com/comp-music-lab/sync-coop-song-speech/refs/heads/main/stage2data.csv') #read full raw data file of Stage 2 participant data directly from GitHub
View(df)
df<-df[,c(19,20,22,24,26,28,29,31,33,35,37,40,41,42,44)] #keep only social bonding and key variables for confirmatory analysis
write.csv(df,'keydata.csv')
rep_data<-read_csv(file='keydata.csv')
rep_data<- subset(rep_data, attention>49) #Exclude participants failing attention check
#Rename variables:
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - ‘‘I trust the other participants”...4"] <- 'trust'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - ‘‘I trust the other participants”...10"] <- 'trust'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - \"I feel like I am on the same team with the other participants\"...5"] <- 'team'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - \"I feel like I am on the same team with the other participants\"...11"] <- 'team'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...6'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...12'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I feel strong ties to the other participants”...7'] <- 'ties'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I feel strong ties to the other participants”...13'] <- 'ties'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - \"I have a lot in common with the other participants\"...8'] <- 'common'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - \"I have a lot in common with the other participants\"...15'] <- 'common'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...9'] <- 'close'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...16'] <- 'close'
#combine same variables to measure consistency
bind<-rbind(rep_data[,4:9],rep_data[,c(10:13,15:16)])
#This code was used to perform the analyses reported in:
#Savage, P. E., Ampiah-Bonney, A., Arabadjiev, A., Arhine, A., Ariza, J. F., Arnese, F., Bamford, J. S., Barbosa, B. S., Beck, A.-K., Belyk, M., Benetos, E., Bulbulia, J. A., Cabildo, A., Calhoun, S., Chiba, G., Dabaghi Varnosfaderani, S., Dias, R., Duran, S. I., Echim, S., Færøvik, U., Fitch, W. T., Fujii, S., Gabriel, S., Grassi, M., Guiotto Nai Fovino, L. Haiduk, F., Hajič jr., J., Hansen, N. C., Han, K. Y., He, Y., Hegde, S., Honbolygó, F., Huang, J., Jacoby, N., Jadoul, Y., Jia, Z., Jung, T., Kertész, C., Khasanah, U., Kim, I., Kitayama, Y., Kosachenko, A., Krzyżanowski, W., Kuikuro, U., Kurdova, D., Larrouy-Maestri, P., Mikova, Z., Leongómez, J. D., Liu, F., Lomsadze, T., Loui, P., Ma, Y., McBride, J. M., Mousavi, N., Moya, D., Natsitsabui, R., Nguqu, N., Novembre, G., Nuska, P., Nweke, F. E., Ong, J. H., Opondo, P., Ozaki, Y., Parkinson, H., Parselelo, M. L., Pavlov, Y.G., Pavlovich, D., Perry, G., Pfordresher, P. Q., Pisanski, K., Podlipniak, P., Popescu, T., Proutskova, P., Purdy, S., Ravignani, A., Raviv, L., Reindl, E., Ross, R. M., Sadaphal, D. P., Shakya, S. R., Shi, Z., Shilton, D., Silva-Zurita, J., Soto-Silva, I., Štěpánková, B., Talamini, F., Tarr, B., Thompson, W. F., Tierney, A., Tiratanti, P., Trainor, L., Tunçgenç,  B., Vanden Bosch der Nederlanden, C., Vaida, S. Varella, M. A. C., Youngblood, M., Zariquiey, R. (In Principle Accepted). Does synchronised singing enhance social bonding more than speaking does? A global experimental Stage 1 Registered Report. Peer Community In Registered Reports. Preprint: https://doi.org/10.31234/osf.io/pv3m9
#It was partially adapted from code from the following publication:
#Allen, M., Poggiali, D., Whitaker, K., Marshall, T. R., Van Langen, J., & Kievit, R. A. (2021). Raincloud plots: A multi-platform tool for robust data visualization. Wellcome Open Research, 4, 63. https://doi.org/10.12688/wellcomeopenres.15191.2
#Set working directory
setwd('/Users/psav050/Documents/GitHub/sync-coop-song-speech')#NB: You need to set this to your own local working directory to reproduce the analysis
#Install and load packages
if (!require(remotes)) { install.packages('remotes') }
remotes::install_github('jorvlan/raincloudplots')
packages <- c('ggplot2', 'dplyr', 'lavaan', 'plyr', 'cowplot', 'rmarkdown',
'readr', 'caTools', 'bitops', 'xfun','psych','knitr','forcats','GPArotation','tidyr')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(cowplot)
library(dplyr)
library(readr)
library(forcats)
library(psych)
library(tidyr)
knitr::opts_chunk$set(fig.width=6, fig.height=3, fig.path='figs/',
echo=FALSE, warning=FALSE, message=FALSE)
source('R_rainclouds.R')
source('summarySE.R')
source('simulateData.R')
# width and height variables for saved plots
w = 6
h = 3
# Make the figure folder if it doesn't exist yet
dir.create('../figs/tutorial_R/', showWarnings = FALSE)
head(summary_simdat)
#Load and pre-process data (NB: Full raw files with pilot participant data not shared publicly, just shown for transparency - you can reproduce this analysis starting )
df<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/SpeechSong_London_Chinese_March 21, 2025_20.44_unifiedrows.csv') #import from separate Qualtrics account output - not shared publicly
df<-df[-c(12,13),] #Exclude duplicated participant data (change from hard-coding?)
d<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/song_May 7, 2025_21.02.csv')#import from main Qualtrics account output - not shared publicly
d<-d[-c(1:244),] #Exclude pilot data before Stage 2 data collection (change from hard-coding?)
d[18,19]="R" #fix participant entry error
d[1,20]="10" #fix participant entry error
d[14,20]="6" #fix participant entry error
d<-d[-c(21),] #Exclude duplicated participant data (change from hard-coding?)
df<-rbind(df,d)
colnames(df)<-df[1,] #change column names to make clear what they are
#Rename with shorter variable names
names(df)[names(df) == 'What is the "Group ID" listed on the screen?'] <- 'group'
names(df)[names(df) == "What is the \"Participant ID\" number listed on your consent form?"] <- 'ID'
names(df)[names(df) == "How much do you agree with the following statements? - Please rate “strongly agree” to show you are paying attention"] <- 'attention'
df<-df[-c(1:2),] #remove non-data rows
#df<- subset(df, Finished=="True") #Reinstate to remove participants who did not finish - but check capitalisation if using this
df<- subset(df, `Response Type`=="IP Address") #Remove test ("Preview") responses
df$`IP Address`="NA"#Remove IP address data
write.csv(df,'stage2data.csv')
##Start here to reproduce analyses
df<-read_csv(file='https://raw.githubusercontent.com/comp-music-lab/sync-coop-song-speech/refs/heads/main/stage2data.csv') #read full raw data file of Stage 2 participant data directly from GitHub
df <- df[-1] #remove ID row
df<-df[,c(19,20,22,24,26,28,29,31,33,35,37,40,41,42,44)] #keep only social bonding and key variables for confirmatory analysis
write.csv(df,'keydata.csv')
rep_data<-read_csv(file='keydata.csv')
rep_data<- subset(rep_data, attention>49) #Exclude participants failing attention check
#Rename variables:
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - ‘‘I trust the other participants”...4"] <- 'trust'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - ‘‘I trust the other participants”...10"] <- 'trust'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - \"I feel like I am on the same team with the other participants\"...5"] <- 'team'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - \"I feel like I am on the same team with the other participants\"...11"] <- 'team'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...6'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...12'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I feel strong ties to the other participants”...7'] <- 'ties'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I feel strong ties to the other participants”...13'] <- 'ties'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - \"I have a lot in common with the other participants\"...8'] <- 'common'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - \"I have a lot in common with the other participants\"...15'] <- 'common'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...9'] <- 'close'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...16'] <- 'close'
#combine same variables to measure consistency
bind<-rbind(rep_data[,4:9],rep_data[,c(10:13,15:16)])
#Internal consistency analysis of individual bonding variables (Cronbach's alpha)
psych::alpha(bind)
psych::omega(bind)
#Average individual scores into an overall bonding score
rep_data$Pre_Experiment<-rowMeans(rep_data[,4:9]) #pre-experiment baseline average
rep_data<- subset(rep_data, Pre_Experiment<80) #Exclude participants too well-bonded before experiment
rep_data$Post_Experiment<-rowMeans(rep_data[,c(10:13,15:16)]) #post-experiment average
data_long <- gather(rep_data, time, score, Pre_Experiment:Post_Experiment, factor_key=TRUE)
colnames(data_long)[1] <- 'Participant'
write.csv(data_long,'keydata_long.csv')
rep_data<-read_csv(file='keydata_long.csv',
col_types = cols(group = col_factor(levels = c('S', 'C', 'R')),
time = col_factor(levels = c('Pre_Experiment', 'Post_Experiment'))))
rep_data<-rep_data[,-1]
#Plot all  groups
sumrepdat <- summarySE(rep_data, measurevar = 'score', groupvars=c('group', 'time'))
head(sumrepdat)
p11 <- ggplot(rep_data, aes(x = time, y = score, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = 1.5, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = 'black')+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean - sem, ymax = score_mean + sem), width = .05)+
scale_colour_brewer(palette = 'Dark2')+
scale_fill_brewer(palette = 'Dark2')+
ylim(0,100)+
ggtitle('pre-/post-intervention bonding')
ggsave('3Conditions.png', width = w, height = h)
p11
#Load and pre-process data (NB: Full raw files with pilot participant data not shared publicly, just shown for transparency - you can reproduce this analysis starting )
df<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/SpeechSong_London_Chinese_March 21, 2025_20.44_unifiedrows.csv') #import from separate Qualtrics account output - not shared publicly
df<-df[-c(12,13),] #Exclude duplicated participant data (change from hard-coding?)
d<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/song_May 7, 2025_21.02.csv')#import from main Qualtrics account output - not shared publicly
d<-d[-c(1:244),] #Exclude pilot data before Stage 2 data collection (change from hard-coding?)
d[18,19]="R" #fix participant entry error
d[1,20]="10" #fix participant entry error
d[14,20]="6" #fix participant entry error
d<-d[-c(21),] #Exclude duplicated participant data (change from hard-coding?)
df<-rbind(df,d)
colnames(df)<-df[1,] #change column names to make clear what they are
#Rename with shorter variable names
names(df)[names(df) == 'What is the "Group ID" listed on the screen?'] <- 'group'
names(df)[names(df) == "What is the \"Participant ID\" number listed on your consent form?"] <- 'ID'
names(df)[names(df) == "How much do you agree with the following statements? - Please rate “strongly agree” to show you are paying attention"] <- 'attention'
df<-df[-c(1:2),] #remove non-data rows
#df<- subset(df, Finished=="True") #Reinstate to remove participants who did not finish - but check capitalisation if using this
df<- subset(df, `Response Type`=="IP Address") #Remove test ("Preview") responses
df$`IP Address`="NA"#Remove IP address data
write.csv(df,'stage2data.csv')
##Start here to reproduce analyses
df<-read_csv(file='https://raw.githubusercontent.com/comp-music-lab/sync-coop-song-speech/refs/heads/main/stage2data.csv') #read full raw data file of Stage 2 participant data directly from GitHub
df <- df[-1] #remove ID row
View(df)
#This code was used to perform the analyses reported in:
#Savage, P. E., Ampiah-Bonney, A., Arabadjiev, A., Arhine, A., Ariza, J. F., Arnese, F., Bamford, J. S., Barbosa, B. S., Beck, A.-K., Belyk, M., Benetos, E., Bulbulia, J. A., Cabildo, A., Calhoun, S., Chiba, G., Dabaghi Varnosfaderani, S., Dias, R., Duran, S. I., Echim, S., Færøvik, U., Fitch, W. T., Fujii, S., Gabriel, S., Grassi, M., Guiotto Nai Fovino, L. Haiduk, F., Hajič jr., J., Hansen, N. C., Han, K. Y., He, Y., Hegde, S., Honbolygó, F., Huang, J., Jacoby, N., Jadoul, Y., Jia, Z., Jung, T., Kertész, C., Khasanah, U., Kim, I., Kitayama, Y., Kosachenko, A., Krzyżanowski, W., Kuikuro, U., Kurdova, D., Larrouy-Maestri, P., Mikova, Z., Leongómez, J. D., Liu, F., Lomsadze, T., Loui, P., Ma, Y., McBride, J. M., Mousavi, N., Moya, D., Natsitsabui, R., Nguqu, N., Novembre, G., Nuska, P., Nweke, F. E., Ong, J. H., Opondo, P., Ozaki, Y., Parkinson, H., Parselelo, M. L., Pavlov, Y.G., Pavlovich, D., Perry, G., Pfordresher, P. Q., Pisanski, K., Podlipniak, P., Popescu, T., Proutskova, P., Purdy, S., Ravignani, A., Raviv, L., Reindl, E., Ross, R. M., Sadaphal, D. P., Shakya, S. R., Shi, Z., Shilton, D., Silva-Zurita, J., Soto-Silva, I., Štěpánková, B., Talamini, F., Tarr, B., Thompson, W. F., Tierney, A., Tiratanti, P., Trainor, L., Tunçgenç,  B., Vanden Bosch der Nederlanden, C., Vaida, S. Varella, M. A. C., Youngblood, M., Zariquiey, R. (In Principle Accepted). Does synchronised singing enhance social bonding more than speaking does? A global experimental Stage 1 Registered Report. Peer Community In Registered Reports. Preprint: https://doi.org/10.31234/osf.io/pv3m9
#It was partially adapted from code from the following publication:
#Allen, M., Poggiali, D., Whitaker, K., Marshall, T. R., Van Langen, J., & Kievit, R. A. (2021). Raincloud plots: A multi-platform tool for robust data visualization. Wellcome Open Research, 4, 63. https://doi.org/10.12688/wellcomeopenres.15191.2
#Set working directory
setwd('/Users/psav050/Documents/GitHub/sync-coop-song-speech')#NB: You need to set this to your own local working directory to reproduce the analysis
#Install and load packages
if (!require(remotes)) { install.packages('remotes') }
remotes::install_github('jorvlan/raincloudplots')
packages <- c('ggplot2', 'dplyr', 'lavaan', 'plyr', 'cowplot', 'rmarkdown',
'readr', 'caTools', 'bitops', 'xfun','psych','knitr','forcats','GPArotation','tidyr')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(cowplot)
library(dplyr)
library(readr)
library(forcats)
library(psych)
library(tidyr)
knitr::opts_chunk$set(fig.width=6, fig.height=3, fig.path='figs/',
echo=FALSE, warning=FALSE, message=FALSE)
source('R_rainclouds.R')
source('summarySE.R')
source('simulateData.R')
# width and height variables for saved plots
w = 6
h = 3
# Make the figure folder if it doesn't exist yet
dir.create('../figs/tutorial_R/', showWarnings = FALSE)
head(summary_simdat)
#Load and pre-process data (NB: Full raw files with pilot participant data not shared publicly, just shown for transparency - you can reproduce this analysis starting )
df<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/SpeechSong_London_Chinese_March 21, 2025_20.44_unifiedrows.csv') #import from separate Qualtrics account output - not shared publicly
df<-df[-c(12,13),] #Exclude duplicated participant data (change from hard-coding?)
d<-read_csv(file='/Users/psav050/Documents/Research/Publications/Accepted/Savage et al (2025) PCI-RR Many Voices 2/MV2 real data/song_May 7, 2025_21.02.csv')#import from main Qualtrics account output - not shared publicly
d<-d[-c(1:244),] #Exclude pilot data before Stage 2 data collection (change from hard-coding?)
d[18,19]="R" #fix participant entry error
d[1,20]="10" #fix participant entry error
d[14,20]="6" #fix participant entry error
d<-d[-c(21),] #Exclude duplicated participant data (change from hard-coding?)
df<-rbind(df,d)
colnames(df)<-df[1,] #change column names to make clear what they are
#Rename with shorter variable names
names(df)[names(df) == 'What is the "Group ID" listed on the screen?'] <- 'group'
names(df)[names(df) == "What is the \"Participant ID\" number listed on your consent form?"] <- 'ID'
names(df)[names(df) == "How much do you agree with the following statements? - Please rate “strongly agree” to show you are paying attention"] <- 'attention'
df<-df[-c(1:2),] #remove non-data rows
#df<- subset(df, Finished=="True") #Reinstate to remove participants who did not finish - but check capitalisation if using this
df<- subset(df, `Response Type`=="IP Address") #Remove test ("Preview") responses
df$`IP Address`="NA"#Remove IP address data
write.csv(df,'stage2data.csv')
##Start here to reproduce analyses
df<-read_csv(file='https://raw.githubusercontent.com/comp-music-lab/sync-coop-song-speech/refs/heads/main/stage2data.csv') #read full raw data file of Stage 2 participant data directly from GitHub
df <- df[-1] #remove ID row
df<-df[,c(19,20,22,24,26,28,29,31,33,35,37,40,41,42,44)] #keep only social bonding and key variables for confirmatory analysis
write.csv(df,'keydata.csv')
rep_data<-read_csv(file='keydata.csv')
rep_data<- subset(rep_data, attention>49) #Exclude participants failing attention check
#Rename variables:
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - ‘‘I trust the other participants”...4"] <- 'trust'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - ‘‘I trust the other participants”...10"] <- 'trust'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - \"I feel like I am on the same team with the other participants\"...5"] <- 'team'
names(rep_data)[names(rep_data) == "How much do you agree with the following statements? - \"I feel like I am on the same team with the other participants\"...11"] <- 'team'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...6'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...12'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I feel strong ties to the other participants”...7'] <- 'ties'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I feel strong ties to the other participants”...13'] <- 'ties'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - \"I have a lot in common with the other participants\"...8'] <- 'common'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - \"I have a lot in common with the other participants\"...15'] <- 'common'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...9'] <- 'close'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...16'] <- 'close'
#combine same variables to measure consistency
bind<-rbind(rep_data[,4:9],rep_data[,c(10:13,15:16)])
#Internal consistency analysis of individual bonding variables (Cronbach's alpha)
psych::alpha(bind)
psych::omega(bind)
#Average individual scores into an overall bonding score
rep_data$Pre_Experiment<-rowMeans(rep_data[,4:9]) #pre-experiment baseline average
rep_data<- subset(rep_data, Pre_Experiment<80) #Exclude participants too well-bonded before experiment
rep_data$Post_Experiment<-rowMeans(rep_data[,c(10:13,15:16)]) #post-experiment average
data_long <- gather(rep_data, time, score, Pre_Experiment:Post_Experiment, factor_key=TRUE)
colnames(data_long)[1] <- 'Participant'
write.csv(data_long,'keydata_long.csv')
rep_data<-read_csv(file='keydata_long.csv',
col_types = cols(group = col_factor(levels = c('S', 'C', 'R')),
time = col_factor(levels = c('Pre_Experiment', 'Post_Experiment'))))
rep_data<-rep_data[,-1]
#Plot all  groups
sumrepdat <- summarySE(rep_data, measurevar = 'score', groupvars=c('group', 'time'))
head(sumrepdat)
p11 <- ggplot(rep_data, aes(x = time, y = score, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = 1.5, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = 'black')+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean - sem, ymax = score_mean + sem), width = .05)+
scale_colour_brewer(palette = 'Dark2')+
scale_fill_brewer(palette = 'Dark2')+
ylim(0,100)+
ggtitle('pre-/post-intervention bonding')
ggsave('3Conditions.png', width = w, height = h)
p11
#This code was used in November 2024 to perform the pilot data analyses reported in:
#Savage, P. E., et al. "Does singing enhance cooperation more than speaking does? A global experimental Stage 1 Registered Report
#It was partially adapted from code from the following publication:
#Allen, M., Poggiali, D., Whitaker, K., Marshall, T. R., Van Langen, J., & Kievit, R. A. (2021). Raincloud plots: A multi-platform tool for robust data visualization. Wellcome Open Research, 4, 63. https://doi.org/10.12688/wellcomeopenres.15191.2
#Set working directory
setwd('/Users/psav050/Documents/GitHub/sync-coop-song-speech') #Please edit to point to your own locally cloned repository directory
#Install and load packages
if (!require(remotes)) { install.packages('remotes') }
remotes::install_github('jorvlan/raincloudplots')
packages <- c('ggplot2', 'dplyr', 'lavaan', 'plyr', 'cowplot', 'rmarkdown',
'readr', 'caTools', 'bitops', 'xfun','psych','knitr','forcats','GPArotation','tidyr')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(cowplot)
library(dplyr)
library(readr)
library(forcats)
library(psych)
library(tidyr)
knitr::opts_chunk$set(fig.width=6, fig.height=3, fig.path='figs/',
echo=FALSE, warning=FALSE, message=FALSE)
source('R_rainclouds.R')
source('summarySE.R')
source('simulateData.R')
# width and height variables for saved plots
w = 6
h = 3
# Make the figure folder if it doesn't exist yet
dir.create('../figs/tutorial_R/', showWarnings = FALSE)
head(summary_simdat)
#Load and pre-process pilot data
df<-read_csv(file='https://raw.githubusercontent.com/comp-music-lab/sync-coop-song-speech/refs/heads/main/song_August%2021%2C%202024_16.12.csv') #read raw Qualtrics export file directly from GitHub
colnames(df)<-df[1,] #change column names to make clear what they are
names(df)[names(df) == 'What is the "Group ID" listed on the screen?'] <- 'group' #Rename with shorter variable name
df<-df[-c(1:2),] #remove non-data rows
df<- subset(df, Finished=="TRUE") #Remove participants who did not finish - may need to decapitalise to "True" for newer data exports
df<- subset(df, `Response Type`=="IP Address") #Remove test ("Preview") responses
df<-df[-c(1:41),] #Remove preliminary pilot experiments before July 25 2024
df<-df[-c(6),] #Exclude duplicated participant data
df<-df[1:14,] #Keep only NZ English pilot data (should eventually update this to a more automated exclusion algorithm based on start/stop date/time, completion rate, etc.)
df<-df[,c(17,19,29:31,48,54,56,58,62,66,68,70,73)] #exclude exploratory variables, keeping only social bonding variables for confirmatory analysis
write.csv(df,'keydata.csv')
rep_data<-read_csv(file='keydata.csv')
#Rename variables:
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - "I feel like I am on the same team with the other participants"...4'] <- 'team'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - "I feel like I am on the same team with the other participants"...9'] <- 'team'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - "I feel like I am on the same team with the other participants"...13'] <- 'team'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...5'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...10'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - “I think I am similar to the other participants’’...14'] <- 'similar'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - ‘‘I trust the other participants”...6'] <- 'trust'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - ‘‘I trust the other participants”...8'] <- 'trust'
names(rep_data)[names(rep_data) == 'How much do you agree with the following statements? - ‘‘I trust the other participants”...12'] <- 'trust'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...7'] <- 'close'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...11'] <- 'close'
names(rep_data)[names(rep_data) == 'How close do you feel to all the other participants? - 1...15'] <- 'close'
#combine same variables to measure consistency
bind<-rbind(rep_data[,4:7],rep_data[,8:11],rep_data[,12:15])
#Internal consistency analysis of individual cooperation variables (Cronbach's alpha)
psych::alpha(bind)
psych::omega(bind)
#Average individual scores into an overall cooperation score
rep_data$Pre_Experiment<-rowMeans(rep_data[,4:7]) #pre-experiment baseline average cooperation
rep_data$Post_Experiment<-rowMeans(rep_data[,8:11]) #cooperation after 1st experiment condition
rep_data$t3<-rowMeans(rep_data[,12:15]) #average cooperation at end of exploratory conditions
data_long <- gather(rep_data, time, score, Pre_Experiment:Post_Experiment, factor_key=TRUE)
colnames(data_long)[1] <- 'Participant'
write.csv(data_long,'keydata_long.csv')
rep_data<-read_csv(file='keydata_long.csv',
col_types = cols(group = col_factor(levels = c('S', 'C', 'R')),
time = col_factor(levels = c('Pre_Experiment', 'Post_Experiment'))))
rep_data<-rep_data[,-1]
#Plot all  groups
sumrepdat <- summarySE(rep_data, measurevar = 'score', groupvars=c('group', 'time'))
head(sumrepdat)
p11 <- ggplot(rep_data, aes(x = time, y = score, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = 1.5, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = 'black')+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean - sem, ymax = score_mean + sem), width = .05)+
scale_colour_brewer(palette = 'Dark2')+
scale_fill_brewer(palette = 'Dark2')+
ylim(0,100)+
ggtitle('pre-/post-intervention bonding')
ggsave('3Conditions.png', width = w, height = h)
p11
